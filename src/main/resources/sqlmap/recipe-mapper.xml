<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="recipe">

    <sql id="recipeCover">
        recipes.id,
        recipes.category,
        recipes.title,
        recipes.coverImage,
        recipes.author,
        recipes.postDate,
        recipes.lastEditDate,
        (SELECT AVG(recipeRatings.rating)
           FROM recipeRatings JOIN users ON recipeRatings.userId = users.id
          WHERE recipeRatings.recipe = recipes.id
            AND users.isDeleted = 'N') averageRating,
        <choose>
            <when test="loginUser == null">NULL</when>
            <otherwise>
                (SELECT recipeRatings.rating
                   FROM recipeRatings
                  WHERE recipeRatings.userId = #{loginUser})
            </otherwise>
        </choose> yourRating
    </sql>

    <select id="list"
            parameterType="map"
            resultType="RecipeCover">
        SELECT *
          FROM (SELECT <include refid="recipeCover"/>
                  FROM recipes
                 WHERE isDeleted = 'N'
                       <if test="category != null">
                           AND category = #{category}
                       </if>
                       <if test="author != null">
                           AND author = #{author}
                       </if>
                       <if test="since != null">
                           AND posts.postDate &lt; #{since}
                       </if>
                 ORDER BY postDate DESC)
         WHERE ROWNUM &lt;= #{pages}
    </select>

    <select id="getCover"
            resultType="RecipeCover">
        SELECT <include refid="recipeCover"/>
          FROM recipes r
         WHERE isDeleted = 'N'
           AND id = #{id}
    </select>

    <select id="steps"
            resultType="RecipeStep">
        SELECT recipe,
               ordinal index,
               image,
               text
          FROM steps s
         WHERE recipe = #{recipe}
         ORDER BY ordinal
    </select>

    <select id="checkIfRecipeExists"
            parameterType="Integer">
        SELECT id
          FROM recipes
         WHERE isDeleted = 'N'
           AND id = #{id}
    </select>

    <select id="generatePostId"
            resultType="Integer">
        SELECT seq_recipes.nextval
          FROM dual
    </select>

</mapper>