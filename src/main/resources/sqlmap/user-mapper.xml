<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

	<select id="userSettings"
	        parameterType="Integer"
	        resultType="UserSettingData">
		SELECT id,
			   name,
			   motd,
			   profileImage,
			   notifyReactions,
			   notifyLikes,
			   notifyFollows
		  FROM users
		 WHERE id = #{id}
	</select>
	
	<sql id="isFollowedByYou">
		<choose>
			<when test="loginUser == null">NULL</when>
			<when test="loginUser == userId">NULL</when>
			<otherwise>
				(SELECT COUNT(*)
		           FROM follows
				  WHERE userId = #{loginUser}
		            AND following = #{userId})
			</otherwise>
		</choose>
	</sql>

	<sql id="isFollowingYou">
		<choose>
			<when test="loginUser == null">NULL</when>
			<when test="loginUser == userId">NULL</when>
			<otherwise>
				(SELECT COUNT(*)
		           FROM follows
				  WHERE userId = #{userId}
		            AND following = #{loginUser})
			</otherwise>
		</choose>
	</sql>

	<select id="selectProfile"
	        parameterType="map"
	        resultType="UserProfileData">
		SELECT id,
		       name,
		       motd,
		       profileImage,
		       <include refid="isFollowingYou">
			       <property name="userId" value="${userId}"/>
		       </include> isFollowingYou,
		       <include refid="isFollowedByYou">
			       <property name="userId" value="${userId}"/>
		       </include> isFollowedByYou
		  FROM users
		 WHERE id = #{userId}
	</select>

	<update id="setName"
	        parameterType="map">
		UPDATE users
		   SET name = #{name}
		 WHERE id = #{id}
	</update>

	<select id="getUserPasswordById"
	        parameterType="Integer">
		SELECT password
		  FROM users
		 WHERE id = #{userId}
	</select>

	<update id="setPassword"
	        parameterType="map">
		UPDATE users
		   SET password = #{newPassword}
		 WHERE id = #{userId}
	</update>

	<select id="getFollower"
	        parameterType="Integer"
	        resultType="UserProfileData">
		SELECT f.userId id,
		       u.name name,
		       u.profileImage profileImage
		  FROM follows f
		       JOIN users u
		         ON f.userId = u.id
		 WHERE f.following = #{it}
	</select>

	<insert id="follow"
	        parameterType="map">
		INSERT INTO follows(userId, following)
		VALUES (#{loginUser}, #{followingId})
	</insert>

	<delete id="unfollow"
	        parameterType="map">
		DELETE FROM follows
		 WHERE userId = #{loginUser}
		   AND following = #{followingId}
	</delete>

	<select id="checkIfUserExists"
	        parameterType="Integer">
		SELECT id
		  FROM users
		 WHERE id = #{it}
	</select>

</mapper>